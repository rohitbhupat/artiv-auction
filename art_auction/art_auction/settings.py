"""
Django settings for art_auction project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9h4yh!-gh-o6f=i$tk##t=10icszoi^0t123z@abadl3ri9nvh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'art.apps.ArtConfig',
    'dashboard.apps.DashboardConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'registration',
    'channels',
    'django_crontab',
    'corsheaders'
]

ASGI_APPLICATION = 'art_auction.asgi.application'
WSGI_APPLICATION = 'art_auction.wsgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
        'CONFIG': {
            # "hosts": [('127.0.0.1', 6379)],
        },
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]
CORS_ALLOW_ALL_ORIGINS = True  # Allow all for debugging (set to False in production)
ROOT_URLCONF = 'art_auction.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'art.context_processors.catalogue_list',
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'db_artiv',
        'USER': 'user_artive',
        'PASSWORD': 'db_pass123',
    #    'HOST': 'db',
        'PORT': '5432', # default PostgreSQL port
    }
}

# # =============================================================================
# Docker-compose 
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'artiv',
#         'USER': 'postgres',
#         'PASSWORD': 'postgres@123',
#         'HOST': 'db',  # Change this from 'localhost' to 'db'
#         'PORT': '5432',
#     }
# }
# =============================================================================

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

RAZORPAY_KEY_ID = 'rzp_test_h1EJ17bmxefVrN'
RAZORPAY_KEY_SECRET = 'LJCnV2hsBL3kc1fUYDz6MhSB'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Use your email provider's SMTP server
EMAIL_PORT = 587  # Port for TLS
EMAIL_USE_TLS = True
# EMAIL_USE_SSL = False  # Ensure it's disabled for TLS
EMAIL_HOST_USER = 'bhupatrohit90@gmail.com'  # Replace with your email address
EMAIL_HOST_PASSWORD = 'riuu kzfp fobd muvy'  # Replace with your email password
DEFAULT_FROM_EMAIL = 'bhupatrohit90@gmail.com'

CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Redis URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_TIMEZONE = 'UTC'

#languages and regions
USE_I18N = True
USE_L10N = True
USE_TZ = True  # Ensure timezone support is enabled
TIME_ZONE = 'Asia/Kolkata'  # Set your local timezone (IST)


LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('en-us', 'English (US)'),
    ('en-ca', 'English (Canada)'),
    ('en-gb', 'English (UK)'),
    ('fr', 'French'),
    ('de', 'German'),
    ('it', 'Italian'),
    ('ja', 'Japanese'),
    ('ar', 'Arabic'),
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


CRONJOBS = [
    ('0 * * * *', 'art_auction.dashboard.views.send_purchase_email'),
    ('0 * * * *', 'art_auction.dashboard.views.handle_unsold_artworks'),
]
